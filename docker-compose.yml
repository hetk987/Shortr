services:
  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shortr-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: file:/app/prisma/dev.db
      PORT: 8080
    volumes:
      - ./backend/prisma:/app/prisma
    working_dir: /app
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:8080/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shortr-network

  # Frontend Web Interface
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shortr-frontend
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://backend:8080
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost:3000/",
        ]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - shortr-network

  # Combined Nginx (serves both frontend and redirector)
  nginx:
    image: nginx:alpine
    container_name: shortr-nginx
    ports:
      - "80:80"      # Redirector
      - "3005:3005"  # Frontend
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - backend
      - frontend
    restart: unless-stopped
    networks:
      - shortr-network

networks:
  shortr-network:
    driver: bridge
